// одна фигура внутри другой
std::vector<std::vector<Point>> polygons = {
    {{1, 1}, {4, 1}, {5, 3}, {3, 5}, {1, 3}}, 
    {{2, 2}, {4, 2}, {3, 4}}                  
};

// концентрические квадраты
std::vector<std::vector<Point>> polygons = {
    {{0, 0}, {5, 0}, {5, 5}, {0, 5}},         
    {{1, 1}, {4, 1}, {4, 4}, {1, 4}},         
    {{2, 2}, {3, 2}, {3, 3}, {2, 3}}          
};

// три фигуры внутри одной без общей площади пересечения
std::vector<std::vector<Point>> polygons = {
        {{0, 0}, {3, 0}, {4, 2}, {3, 4}, {0, 4}, {-1, 2}}, 
        {{1, 1}, {2, 1}, {1.5, 2}},                        
        {{2, 2}, {3, 2}, {3, 3}, {2, 3}},                  
        {{1, 3}, {2, 3.5}, {3, 3}, {2.5, 2}, {1.5, 2}}     
};

// рандомные фигуры с разным количеством вершин без общей площади
std::vector<std::vector<Point>> polygons = {
    {{0, 0}, {6, 0}, {3, 5}},                          
    {{1, 1}, {2, 0}, {3, 1}, {2, 2}},                  
    {{4, 1}, {5, 0}, {6, 1}, {5.5, 2}, {4.5, 2}},      
    {{2, 3}, {3, 3}, {3.5, 4}, {3, 5}, {2, 5}, {1.5, 4}}, 
    {{3.5, 1.5}, {4.5, 1.5}, {4.5, 2.5}, {3.5, 2.5}}    
};

// общая сторона
std::vector<std::vector<Point>> polygons = {
    {{0, 0}, {2, 0}, {1, 1}},  
    {{1, 1}, {2, 0}, {3, 1}}   // общая сторона (1, 1) - (2, 0)
};

// общая вершина
std::vector<std::vector<Point>> polygons = {
        {{0, 0}, {2, 0}, {1, 3}},  
        {{1, 3}, {3, 4}, {2, 5}}   // общая вершина (1, 3)
};

// фигуры совпадают
std::vector<std::vector<Point>> polygons = {
        {{2, 2}, {2, -2}, {-2, 2}, {-2, -2}},  
        {{2, 2}, {2, -2}, {-2, 2}, {-2, -2}} 
};

// разные типы фигур с общим пересечением 
std::vector<std::vector<Point>> polygons = {
        {{-1, -1}, {-1, 2}, {0, 3}, {2, 2}, {2, -1}},  
        {{0, 0}, {3, 0}, {1.5, 2.5}} 
};
